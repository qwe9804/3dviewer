<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.model.mapper.MemberMapper">
	<select id="idcheck" resultType="int" parameterType="String">
		select
		count(m_id)
		from member
		where m_id = #{m_id}
	</select>

	<select id="emailcheck" resultType="int" parameterType="String">
		select
		count(m_email)
		from member
		where m_email = #{m_email}
	</select>
	<insert id="create" parameterType="MemberDTO">
		insert into member
		(m_id,m_name,m_email,m_passwd,m_phone,m_addr1,m_addr2,m_addr3,m_birth,
		m_date)
		values(#{m_id},#{m_name},#{m_email},#{m_passwd},#{m_phone1}||#{m_phone2}||#{m_phone3},#{m_addr1},
		#{m_addr2},#{m_addr3,jdbcType=VARCHAR},#{m_birth1}||#{m_birth2}||#{m_birth3},sysdate)
	</insert>
	<delete id="delete" parameterType="String">
		delete member where m_id = #{m_id}
	</delete>

	<select id="loginCheck" parameterType="Map" resultType="int">
		select
		count(m_id) as cnt
		from member
		where m_id=#{m_id} and
		m_passwd=#{m_passwd}
	</select>

	<select id="getGrade" parameterType="String" resultType="String">
		select
		m_grade from member
		where m_id = #{m_id}
	</select>

	<select id="read" parameterType="String" resultType="MemberDTO">
		select m_email,m_id,m_money ,m_name, m_phone,  m_addr1, m_addr2,m_addr3,m_birth
		from member
		where m_id = #{m_id}
	</select>
	
	<update id="update" parameterType="MemberDTO">
		update member
		set
	
			m_phone = #{m_phone1}||#{m_phone2}||#{m_phone3},
			m_addr1 = #{m_addr1},
			m_addr2 = #{m_addr2},
			m_addr3 = #{m_addr3,jdbcType=VARCHAR},
			m_birth = #{m_birth1}||#{m_birth2}||#{m_birth3}
		
		where m_id=#{m_id}
	</update>
	
	<update id="updatemoney" parameterType="String">
		update member
		set
		 m_money = m_money + to_number(#{m_updatemoney,jdbcType=INTEGER})
		 where m_id=#{m_id}
	</update>
	
	<select id="findID" resultType="String" parameterType="Map">
		select m_id from member
		where m_name = #{m_name} and m_email = #{m_email}
	</select>
	<select id="findPW" resultType="String" parameterType="Map">
		select m_passwd from member
		where m_id = #{m_id} and m_email = #{m_email}
	</select>
</mapper>
